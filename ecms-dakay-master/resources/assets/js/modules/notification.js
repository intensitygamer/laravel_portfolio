import noty from 'noty';

class Notification
{
    /**
     * Generated by Noty Plugin
     * @param opts
     * @constructor
     */
    createNoty(opts){
        opts = (typeof opts !== "object") ? {} : opts;
        opts.layout = opts.layout || 'topRight';
        opts.theme = opts.theme || 'relax';
        opts.type = opts.type || 'information';
        opts.text = '<div class="flash-item"><i class="fa fa-' + (opts.type==='success' ? 'check' : (opts.type==='error' ? 'close' : (opts.type==='warning' ? 'warning' : (opts.type === 'information' ? 'info-circle': 'ban'))))  + '  text-' + (opts.type === 'error' ? 'danger' : opts.type === 'error' ? 'danger' : '') + '"></i><div class="flash">' + opts.text || '-' + '</div></div>';
        opts.dismissQueue = opts.dismissQueue || true;
        opts.closewith = opts.closewith || ['click'];
        opts.animateOpen = opts.animateOpen || 'animated bounceInRight';
        opts.animateClose = opts.animateClose || 'animated bounceOutRight';
        opts.animateEasing = opts.animateEasing || 'swing';
        opts.animateSpeed = opts.animateSpeed || 700;
        opts.timeout = opts.timeout || 10000;
        opts.force = opts.force || false;
        opts.modal = opts.modal || false;
        opts.killer = opts.killer || false;
        opts.buttons = opts.buttons || false;
        opts.maxVisible = opts.maxVisible || 15;
        opts.onShow = opts.onShow || function () {
                $('.flash-item').css('padding','7px 12px');
                $('.flash-item i').css({'float':'left', 'font-size':'16px'});
                $('.flash-item .flash').css('margin-left','25px');
                $('.noty_message').css('font-weight','normal');
            };
        opts.afterShow = opts.afterShow || function () {};
        opts.onClose = opts.onClose || function () {};
        opts.afterClose = opts.afterClose || function () {};
        opts.onCloseClick = opts.onCloseClick || function () {};

        noty({
            layout      : opts.layout,
            theme       : opts.theme,
            type        : opts.type,
            text        : opts.text,
            dismissQueue: opts.dismissQueue,
            closeWith   : opts.closewith,
            animation   : {
                open  : opts.animateOpen,
                close : opts.animateClose,
                easing: opts.animateEasing,
                speed : opts.animateSpeed
            },
            timeout    : opts.timeout,
            force      : opts.force,
            modal      : opts.modal,
            maxVisible : opts.maxVisible,
            killer     : opts.killer,
            callback   : {
                onShow      :opts.onShow,
                afterShow   :opts.afterShow,
                onClose     :opts.onClose,
                afterClose  :opts.afterClose,
                onCloseClick:opts.onCloseClick
            },
            buttons    : opts.buttons
        });
    }
}

export { Notification }