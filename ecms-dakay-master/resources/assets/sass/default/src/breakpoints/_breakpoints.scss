$breakpoints: (
        "phone":        300px,
        "phone-wide":   480px,
        "phablet":      560px,
        "tablet-small": 640px,
        "bs-sm":        750px,
        "tablet":       768px,
        "bs-md":        992px,
        "tablet-wide":  1024px,
        "bs-lg":        1200px,
        "desktop":      1248px,
        "desktop-wide": 1440px
);

@mixin mq($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}

@mixin mq_narrow($maxwidth, $minwidth) {
  @if map_has_key($breakpoints, $maxwidth) and map_has_key($breakpoints, $maxwidth) {
    $maxwidth: map_get($breakpoints, $maxwidth);
    $minwidth: map_get($breakpoints, $minwidth);

    @media only screen and (max-width: $maxwidth) and (min-width: $minwidth) {
      @content;
    }
  }
}

@mixin breakpoint($min, $max) {
  $type: type-of($min);

  @if $type == string {
    $class: $type;

    @if $class == xs {
      @media (max-width: 767px) { @content; }
    }

    @else if $class == sm {
      @media (min-width: 768px) { @content; }
    }

    @else if $class == md {
      @media (min-width: 992px) { @content; }
    }

    @else if $class == lg {
      @media (min-width: 1200px) { @content; }
    }
  }

  @else if $type == number {
    $query: "all" !default;
    @if $min != 0 and $max != 0 {
      $query: "(min-width: #{$min}) and (max-width: #{$max})";
    }
    @else if $min != 0 and $max == 0 {
      $query: "(min-width: #{$min})";
    }
    @else if $min == 0 and $max != 0 {
      $query: "(max-width: #{$max})";
    }
    @media #{$query} {
      @content;
    }
  }

  @else {
    @warn "Breakpoint mixin supports: xs, sm, md, lg, and numbers";
  }
}

/**
** Sample code below
**/
.sample-sample-sample {
  padding: 2rem;
  font-size: 1.8rem;
  @include mq('tablet-wide') {
    padding-top: 4rem;
    font-size: 2.4rem;
  }
}